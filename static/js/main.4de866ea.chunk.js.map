{"version":3,"sources":["components/CircleSelector/CircleSelector.js","components/Circles/Circles.js","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","className","this","props","circles","map","c","i","onClick","handleClick","Component","Circles","App","newCircles","setState","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAqBeA,E,4JAhBb,WAAU,IAAD,OACP,OACE,qBAAKC,UAAU,iBAAf,SACKC,KAAKC,MAAMC,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OACxB,yBAEAN,UAAWK,EAAI,WAAa,GAC5BE,QAAS,kBAAM,EAAKL,MAAMM,YAAYF,IAHtC,2BAIiBA,EAAE,IAHdA,EAAE,Y,GANYG,aCgBdC,G,kKAfb,WACE,OACE,qBAAKV,UAAU,UAAf,SACGC,KAAKC,MAAMC,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OACpB,qBAEAN,UAAWK,EAAI,WAAa,GAF5B,SAGCC,EAAE,GAFEA,EAAE,Y,GANGG,cC+BPE,E,kDA7Bb,aAAe,IAAD,8BACZ,gBAMFH,YAAc,SAACF,GACb,IAAIM,EAAa,EAAC,GAAO,GAAO,GAAO,GACvCA,EAAWN,IAAK,EAChB,EAAKO,SAAS,CAACV,QAAQ,GAAD,OAAMS,MAR5B,EAAKE,MAAQ,CACXX,QAAS,EAAC,GAAM,GAAO,GAAO,IAHpB,E,0CAad,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACAG,QAASF,KAAKa,MAAMX,QACpBK,YAAaP,KAAKO,cAClB,cAAC,EAAD,CACAL,QAASF,KAAKa,MAAMX,oB,GAvBZM,aCOHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4de866ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './CircleSelector.css'\n\n\nclass CircleSelector extends Component {\n  render() {\n    return (\n      <div className=\"CircleSelector\">\n          {this.props.circles.map((c, i) => \n          <button \n          key={i+1} \n          className={c ? \"selected\" : \"\"}\n          onClick={() => this.props.handleClick(i)}>\n            SELECT CIRCLE {i+1}\n          </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default CircleSelector;","import React, { Component } from 'react';\nimport './Circles.css'\n\n\nclass Circles extends Component {\n  render() {\n    return (\n      <div className=\"Circles\">\n        {this.props.circles.map((c, i) => \n            <div \n            key={i+1} \n            className={c ? \"selected\" : \"\"}>\n            {i+1}\n            </div>  \n        )}\n      </div>\n    );\n  }\n}\n\nexport default Circles;","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from './components/CircleSelector/CircleSelector'\nimport Circles from './components/Circles/Circles'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      circles: [true, false, false, false]\n    }\n  }\n\n  handleClick = (i) => {\n    let newCircles = [false, false, false, false]\n    newCircles[i] = true\n    this.setState({circles: [...newCircles]})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector \n          circles={this.state.circles}\n          handleClick={this.handleClick}/>\n          <Circles \n          circles={this.state.circles}/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}